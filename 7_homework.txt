1.1. https://losst.ru/kak-otkryt-port-ubuntu
1.2. Установил.
1.3.
server{
  listen 80;
  server_name ceron;

  location / {
    if ($http_user != ''){
      return 200 "Hi $http_user!";
    }
      return 404 "Page not found";
  }
}

curl -L http://127.0.0.1 -H "Host: ceron" -H "User: Mister Smith"

2.1.
Подтверждение того, что сервер является именно тем сервером, за который себя выдаёт.
Генерится командой по созданию ключа и настройкой сервера на использование SSL через 443 порт.

2.2.
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name 192.168.56.101;
        return 301 https://$server_name$request_uri;
}
        # SSL configuration
        server {
          listen 443 ssl http2 default_server;
          listen [::]:443 ssl http2 default_server;
          include snippets/self-signed.conf;
          include snippets/ssl-params.conf;

        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;


        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
	}
        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#

2.3.
Браузер предупреждает, что сертификат не из центра сертификации, следовательно сайт не безопасен для посещения.

2.4.
Долго смотрел, читал. Ничего не нашел)) кроме того, что скорость шифровки/дешифровки разная. Симметричный работает быстрее, как я понял.
